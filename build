#!/bin/bash
# Author: Paulo Jerônimo <paulojeronimo@gmail.com>
#
# Script que gera uma apresentação com o asciidoc e dzslides.
# Utiliza uma versão customizada do dzslides (configurado em build.conf.sample)
# Executável no OSX. Para outros ambientes, adapte-o!
set +x

BASEDIR=`cd "$(dirname "$0")"; pwd`

for conf in build.conf build.conf.sample
do
  conf="$BASEDIR"/$conf
  if [ -f "$conf" ]
  then
    source "$conf" && break || exit 1
  fi
done
[ "$DZSLIDES_BACKEND" ] || { echo "DZSLIDES_BACKEND não configurado!"; exit; }
[ "$DZSLIDES" ] || { echo "DZSLIDES não configurado!"; exit; }
[ "$TARGET" ] || { echo "TARGET não configurado!"; exit; }

install_asciidoc() {
  case $OSTYPE in
    darwin*) brew install asciidoc;;
    *) echo 'Por favor, instale o asciidoc!'; exit;;
  esac
}

install_qrencode() {
  case $OSTYPE in
    darwin*) brew install qrencode;;
    *) echo 'Por favor, instale o qrencode!'; exit;;
  esac
}

prepare() {
  which asciidoc > /dev/null || install_asciidoc
  which qrencode > /dev/null || install_qrencode
  pushd . &> /dev/null
  mkdir -p ~/.asciidoc && cd $_
  local f=qrcode-filter-1.0.zip
  if ! [ -f $f ]
  then
      wget -c http://asciidoc-qrencode-filter.googlecode.com/files/$f
      asciidoc --filter install $f
  fi
  mkdir -p ~/.asciidoc/backends && cd $_
  if ! [ -d dzslides ]
  then
      git clone $DZSLIDES_BACKEND dzslides && cd $_
      git clone $DZSLIDES
  fi
  popd &> /dev/null
}

build() {
  prepare
  
  local embbeded
  mkdir -p "$TARGET"
  if [ "$1" == "--embbeded" ]
  then
    rm -rf "$TARGET"/*
    embbeded="-a data-uri -a linkcss!"
  else
    rsync -a --update --delete ~/.asciidoc/backends/dzslides/dzslides "$TARGET"/
  fi
  asciidoc $embbeded index.asciidoc && \
  mv index.html "$TARGET"/
  [ "$embbeded" ] && true || rsync -a --update --delete images "$TARGET"/
}

clean() {
  rm -rf "$TARGET"
  rm -f images/presentation-qrcode.png
}

create_gh_pages_branch() {
  git checkout --orphan gh-pages
  rm -rf *
  git rm -rf .
  echo 'Página inicial' > index.html
  git add .
  git commit -m 'Commit inicial'
  git checkout master
  git push -u origin gh-pages
  git submodule add -b gh-pages `git config --get remote.origin.url` "$PUBLISHED"
  git add .
  git commit -m 'Adicionada a branch gh-pages'
  git push
}

publish_on_gh_pages() {
  publish_with_rsync

  local msg="Publicação em `date +"%d/%m/%Y às %H:%M:%S"`"
  cd "$PUBLISHED"
  git add .
  git commit -m "$msg"
  git push origin HEAD:gh-pages
  cd ..
  git add "`basename "$PUBLISHED"`"
  git commit -m "$msg"
  git push
}

publish_with_rsync() {
  [ "$PUBLISHED" ] || { echo "PUBLISHED não configurado!"; return; }
  [ -d "$PUBLISHED" ] || mkdir -p "$PUBLISHED"
  [ -d "$TARGET" ] || { echo "O diretório \"$TARGET\" não existe!"; return; }
  rsync -av --update --delete --exclude '.git' "$TARGET"/ "$PUBLISHED"/
}

server() {
  cd "$TARGET" &>/dev/null
  python -m SimpleHTTPServer
  cd - &> /dev/null
}

cd "$BASEDIR"
op=${1:-build}
shift
type "$op" &> /dev/null && $op "$@"
